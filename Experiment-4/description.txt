Objective
To develop a live character counter for a textarea that dynamically updates as the user types,
 providing instant feedback on the number of characters entered.

Tools Used
HTML – For structuring the webpage.
CSS – For styling and presentation.
JavaScript – For real-time event handling and DOM manipulation.


Procedure
Created a textarea in HTML for user input and a span element to display the character count.
Applied CSS styling to format the layout and make it user-friendly.
Used JavaScript to add an input event listener on the textarea.
The event handler calculates the current character length and updates the counter instantly.
Tested with both empty input and pre-filled text to validate real-time updates.

HTML Structure
Created a container <div> for the live counter.
Added a <textarea> element with a placeholder "Start typing...".
Placed a <p> tag with a <span> inside it (<span id="charCount">) to display the live character count.
For demonstration, added a second container with a pre-filled textarea "Hello from ByteXL" to show how the counter works with existing text.

CSS Styling
Used a .container class with a border, padding, and margin to create a clear box around each counter section.
Styled the <textarea> to take the full width, adjust height, and maintain a clean look.


JavaScript Functionality
Selected the textarea (document.getElementById("textInput")) and the character count span (document.getElementById("charCount")).
Added an event listener for the input event, which triggers every time the user types, deletes, or pastes text.
Inside the event handler, updated the span text (.textContent) with the current length of the textarea value (textInput.value.length).
Repeated the same steps for the second textarea (textInput2) and its counter (charCount2).

Execution
Opened the index.html file in a browser.
Initially, the first counter displayed Characters: 0.
As text was entered in the first textarea, the character count updated instantly.
The second textarea loaded with "Hello from ByteXL", showing Characters: 17 by default and updating live when modified.

Output
The counter starts from 0 when no text is entered.
As the user types, the counter updates immediately.
Example: typing “Hello from ByteXL” shows Characters: 17.

Learning Outcomes
Understood how to capture and handle real-time user input using the input event in JavaScript.
Gained experience in DOM manipulation (.textContent) to update content dynamically.
Practiced the principle of separation of concerns (HTML for structure, CSS for styling, JS for logic).
Learned how to design interactive features that improve user experience.
Explored practical use cases in form validation, character limits, and live feedback systems.